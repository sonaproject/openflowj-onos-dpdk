// Copyright (c) 2008 The Board of Trustees of The Leland Stanford Junior University
// Copyright (c) 2011, 2012 Open Networking Foundation
// Copyright (c) 2012, 2013 Big Switch Networks, Inc.
// This library was generated by the LoxiGen Compiler.
// See the file LICENSE.txt which should have been included in the source distribution

// Automatically generated by LOXI from template const_serializer.java
// Do not modify

package org.projectfloodlight.openflow.protocol.ver13;

import org.projectfloodlight.openflow.protocol.*;
import org.projectfloodlight.openflow.protocol.action.*;
import org.projectfloodlight.openflow.protocol.actionid.*;
import org.projectfloodlight.openflow.protocol.bsntlv.*;
import org.projectfloodlight.openflow.protocol.errormsg.*;
import org.projectfloodlight.openflow.protocol.meterband.*;
import org.projectfloodlight.openflow.protocol.instruction.*;
import org.projectfloodlight.openflow.protocol.instructionid.*;
import org.projectfloodlight.openflow.protocol.match.*;
import org.projectfloodlight.openflow.protocol.stat.*;
import org.projectfloodlight.openflow.protocol.oxm.*;
import org.projectfloodlight.openflow.protocol.oxs.*;
import org.projectfloodlight.openflow.protocol.queueprop.*;
import org.projectfloodlight.openflow.types.*;
import org.projectfloodlight.openflow.util.*;
import org.projectfloodlight.openflow.exceptions.*;
import org.projectfloodlight.openflow.protocol.OFOduSignalType;
import io.netty.buffer.ByteBuf;
import com.google.common.hash.PrimitiveSink;

public class OFOduSignalTypeSerializerVer13 {

    public final static byte ODU1_VAL = (byte) 0x1;
    public final static byte ODU2_VAL = (byte) 0x2;
    public final static byte ODU3_VAL = (byte) 0x3;
    public final static byte ODU4_VAL = (byte) 0x4;
    public final static byte ODU0_VAL = (byte) 0xa;
    public final static byte ODU2E_VAL = (byte) 0xb;
    public final static byte ODUFCBR_VAL = (byte) 0x14;
    public final static byte ODUFGFPFHAO_VAL = (byte) 0x15;
    public final static byte ODUFGFPF_VAL = (byte) 0x16;

    public static OFOduSignalType readFrom(ByteBuf bb) throws OFParseError {
        try {
            return ofWireValue(bb.readByte());
        } catch (IllegalArgumentException e) {
            throw new OFParseError(e);
        }
    }

    public static void writeTo(ByteBuf bb, OFOduSignalType e) {
        bb.writeByte(toWireValue(e));
    }

    public static void putTo(OFOduSignalType e, PrimitiveSink sink) {
        sink.putByte(toWireValue(e));
    }

    public static OFOduSignalType ofWireValue(byte val) {
        switch(val) {
            case ODU1_VAL:
                return OFOduSignalType.ODU1;
            case ODU2_VAL:
                return OFOduSignalType.ODU2;
            case ODU3_VAL:
                return OFOduSignalType.ODU3;
            case ODU4_VAL:
                return OFOduSignalType.ODU4;
            case ODU0_VAL:
                return OFOduSignalType.ODU0;
            case ODU2E_VAL:
                return OFOduSignalType.ODU2E;
            case ODUFCBR_VAL:
                return OFOduSignalType.ODUFCBR;
            case ODUFGFPFHAO_VAL:
                return OFOduSignalType.ODUFGFPFHAO;
            case ODUFGFPF_VAL:
                return OFOduSignalType.ODUFGFPF;
            default:
                throw new IllegalArgumentException("Illegal wire value for type OFOduSignalType in version 1.3: " + val);
        }
    }


    public static byte toWireValue(OFOduSignalType e) {
        switch(e) {
            case ODU1:
                return ODU1_VAL;
            case ODU2:
                return ODU2_VAL;
            case ODU3:
                return ODU3_VAL;
            case ODU4:
                return ODU4_VAL;
            case ODU0:
                return ODU0_VAL;
            case ODU2E:
                return ODU2E_VAL;
            case ODUFCBR:
                return ODUFCBR_VAL;
            case ODUFGFPFHAO:
                return ODUFGFPFHAO_VAL;
            case ODUFGFPF:
                return ODUFGFPF_VAL;
            default:
                throw new IllegalArgumentException("Illegal enum value for type OFOduSignalType in version 1.3: " + e);
        }
    }

}

// Copyright (c) 2008 The Board of Trustees of The Leland Stanford Junior University
// Copyright (c) 2011, 2012 Open Networking Foundation
// Copyright (c) 2012, 2013 Big Switch Networks, Inc.
// This library was generated by the LoxiGen Compiler.
// See the file LICENSE.txt which should have been included in the source distribution

// Automatically generated by LOXI from template of_virtual_class.java
// Do not modify

package org.projectfloodlight.openflow.protocol.ver13;

import org.projectfloodlight.openflow.protocol.*;
import org.projectfloodlight.openflow.protocol.action.*;
import org.projectfloodlight.openflow.protocol.actionid.*;
import org.projectfloodlight.openflow.protocol.bsntlv.*;
import org.projectfloodlight.openflow.protocol.errormsg.*;
import org.projectfloodlight.openflow.protocol.meterband.*;
import org.projectfloodlight.openflow.protocol.instruction.*;
import org.projectfloodlight.openflow.protocol.instructionid.*;
import org.projectfloodlight.openflow.protocol.match.*;
import org.projectfloodlight.openflow.protocol.stat.*;
import org.projectfloodlight.openflow.protocol.oxm.*;
import org.projectfloodlight.openflow.protocol.oxs.*;
import org.projectfloodlight.openflow.protocol.queueprop.*;
import org.projectfloodlight.openflow.types.*;
import org.projectfloodlight.openflow.util.*;
import org.projectfloodlight.openflow.exceptions.*;
import io.netty.buffer.ByteBuf;

abstract class OFOxmVer13 {
    // version: 1.3
    final static byte WIRE_VERSION = 4;
    final static int MINIMUM_LENGTH = 4;


    public final static OFOxmVer13.Reader READER = new Reader();

    static class Reader implements OFMessageReader<OFOxm<?>> {
        @Override
        public OFOxm<?> readFrom(ByteBuf bb) throws OFParseError {
            if(bb.readableBytes() < MINIMUM_LENGTH)
                return null;
            int start = bb.readerIndex();
            int typeLen = bb.readInt();
            bb.readerIndex(start);
            switch(typeLen) {
               case (int) 0x80002a02:
                   // discriminator value 0x80002a02L=0x80002a02L for class OFOxmArpOpVer13
                   return OFOxmArpOpVer13.READER.readFrom(bb);
               case (int) 0x80002b04:
                   // discriminator value 0x80002b04L=0x80002b04L for class OFOxmArpOpMaskedVer13
                   return OFOxmArpOpMaskedVer13.READER.readFrom(bb);
               case (int) 0x80003006:
                   // discriminator value 0x80003006L=0x80003006L for class OFOxmArpShaVer13
                   return OFOxmArpShaVer13.READER.readFrom(bb);
               case (int) 0x8000310c:
                   // discriminator value 0x8000310cL=0x8000310cL for class OFOxmArpShaMaskedVer13
                   return OFOxmArpShaMaskedVer13.READER.readFrom(bb);
               case (int) 0x80002c04:
                   // discriminator value 0x80002c04L=0x80002c04L for class OFOxmArpSpaVer13
                   return OFOxmArpSpaVer13.READER.readFrom(bb);
               case (int) 0x80002d08:
                   // discriminator value 0x80002d08L=0x80002d08L for class OFOxmArpSpaMaskedVer13
                   return OFOxmArpSpaMaskedVer13.READER.readFrom(bb);
               case (int) 0x80003206:
                   // discriminator value 0x80003206L=0x80003206L for class OFOxmArpThaVer13
                   return OFOxmArpThaVer13.READER.readFrom(bb);
               case (int) 0x8000330c:
                   // discriminator value 0x8000330cL=0x8000330cL for class OFOxmArpThaMaskedVer13
                   return OFOxmArpThaMaskedVer13.READER.readFrom(bb);
               case (int) 0x80002e04:
                   // discriminator value 0x80002e04L=0x80002e04L for class OFOxmArpTpaVer13
                   return OFOxmArpTpaVer13.READER.readFrom(bb);
               case (int) 0x80002f08:
                   // discriminator value 0x80002f08L=0x80002f08L for class OFOxmArpTpaMaskedVer13
                   return OFOxmArpTpaMaskedVer13.READER.readFrom(bb);
               case 0x30e04:
                   // discriminator value 0x30e04L=0x30e04L for class OFOxmBsnEgrPortGroupIdVer13
                   return OFOxmBsnEgrPortGroupIdVer13.READER.readFrom(bb);
               case 0x30f08:
                   // discriminator value 0x30f08L=0x30f08L for class OFOxmBsnEgrPortGroupIdMaskedVer13
                   return OFOxmBsnEgrPortGroupIdMaskedVer13.READER.readFrom(bb);
               case 0x30601:
                   // discriminator value 0x30601L=0x30601L for class OFOxmBsnGlobalVrfAllowedVer13
                   return OFOxmBsnGlobalVrfAllowedVer13.READER.readFrom(bb);
               case 0x30702:
                   // discriminator value 0x30702L=0x30702L for class OFOxmBsnGlobalVrfAllowedMaskedVer13
                   return OFOxmBsnGlobalVrfAllowedMaskedVer13.READER.readFrom(bb);
               case 0x30010:
                   // discriminator value 0x30010L=0x30010L for class OFOxmBsnInPorts128Ver13
                   return OFOxmBsnInPorts128Ver13.READER.readFrom(bb);
               case 0x30120:
                   // discriminator value 0x30120L=0x30120L for class OFOxmBsnInPorts128MaskedVer13
                   return OFOxmBsnInPorts128MaskedVer13.READER.readFrom(bb);
               case 0x32640:
                   // discriminator value 0x32640L=0x32640L for class OFOxmBsnInPorts512Ver13
                   return OFOxmBsnInPorts512Ver13.READER.readFrom(bb);
               case 0x32780:
                   // discriminator value 0x32780L=0x32780L for class OFOxmBsnInPorts512MaskedVer13
                   return OFOxmBsnInPorts512MaskedVer13.READER.readFrom(bb);
               case 0x32804:
                   // discriminator value 0x32804L=0x32804L for class OFOxmBsnIngressPortGroupIdVer13
                   return OFOxmBsnIngressPortGroupIdVer13.READER.readFrom(bb);
               case 0x32908:
                   // discriminator value 0x32908L=0x32908L for class OFOxmBsnIngressPortGroupIdMaskedVer13
                   return OFOxmBsnIngressPortGroupIdMaskedVer13.READER.readFrom(bb);
               case 0x33401:
                   // discriminator value 0x33401L=0x33401L for class OFOxmBsnIpFragmentationVer13
                   return OFOxmBsnIpFragmentationVer13.READER.readFrom(bb);
               case 0x33502:
                   // discriminator value 0x33502L=0x33502L for class OFOxmBsnIpFragmentationMaskedVer13
                   return OFOxmBsnIpFragmentationMaskedVer13.READER.readFrom(bb);
               case 0x32401:
                   // discriminator value 0x32401L=0x32401L for class OFOxmBsnL2CacheHitVer13
                   return OFOxmBsnL2CacheHitVer13.READER.readFrom(bb);
               case 0x32502:
                   // discriminator value 0x32502L=0x32502L for class OFOxmBsnL2CacheHitMaskedVer13
                   return OFOxmBsnL2CacheHitMaskedVer13.READER.readFrom(bb);
               case 0x30c04:
                   // discriminator value 0x30c04L=0x30c04L for class OFOxmBsnL3DstClassIdVer13
                   return OFOxmBsnL3DstClassIdVer13.READER.readFrom(bb);
               case 0x30d08:
                   // discriminator value 0x30d08L=0x30d08L for class OFOxmBsnL3DstClassIdMaskedVer13
                   return OFOxmBsnL3DstClassIdMaskedVer13.READER.readFrom(bb);
               case 0x30804:
                   // discriminator value 0x30804L=0x30804L for class OFOxmBsnL3InterfaceClassIdVer13
                   return OFOxmBsnL3InterfaceClassIdVer13.READER.readFrom(bb);
               case 0x30908:
                   // discriminator value 0x30908L=0x30908L for class OFOxmBsnL3InterfaceClassIdMaskedVer13
                   return OFOxmBsnL3InterfaceClassIdMaskedVer13.READER.readFrom(bb);
               case 0x30a04:
                   // discriminator value 0x30a04L=0x30a04L for class OFOxmBsnL3SrcClassIdVer13
                   return OFOxmBsnL3SrcClassIdVer13.READER.readFrom(bb);
               case 0x30b08:
                   // discriminator value 0x30b08L=0x30b08L for class OFOxmBsnL3SrcClassIdMaskedVer13
                   return OFOxmBsnL3SrcClassIdMaskedVer13.READER.readFrom(bb);
               case 0x30204:
                   // discriminator value 0x30204L=0x30204L for class OFOxmBsnLagIdVer13
                   return OFOxmBsnLagIdVer13.READER.readFrom(bb);
               case 0x30308:
                   // discriminator value 0x30308L=0x30308L for class OFOxmBsnLagIdMaskedVer13
                   return OFOxmBsnLagIdMaskedVer13.READER.readFrom(bb);
               case 0x32002:
                   // discriminator value 0x32002L=0x32002L for class OFOxmBsnTcpFlagsVer13
                   return OFOxmBsnTcpFlagsVer13.READER.readFrom(bb);
               case 0x32104:
                   // discriminator value 0x32104L=0x32104L for class OFOxmBsnTcpFlagsMaskedVer13
                   return OFOxmBsnTcpFlagsMaskedVer13.READER.readFrom(bb);
               case 0x31004:
                   // discriminator value 0x31004L=0x31004L for class OFOxmBsnUdf0Ver13
                   return OFOxmBsnUdf0Ver13.READER.readFrom(bb);
               case 0x31108:
                   // discriminator value 0x31108L=0x31108L for class OFOxmBsnUdf0MaskedVer13
                   return OFOxmBsnUdf0MaskedVer13.READER.readFrom(bb);
               case 0x31204:
                   // discriminator value 0x31204L=0x31204L for class OFOxmBsnUdf1Ver13
                   return OFOxmBsnUdf1Ver13.READER.readFrom(bb);
               case 0x31308:
                   // discriminator value 0x31308L=0x31308L for class OFOxmBsnUdf1MaskedVer13
                   return OFOxmBsnUdf1MaskedVer13.READER.readFrom(bb);
               case 0x31404:
                   // discriminator value 0x31404L=0x31404L for class OFOxmBsnUdf2Ver13
                   return OFOxmBsnUdf2Ver13.READER.readFrom(bb);
               case 0x31508:
                   // discriminator value 0x31508L=0x31508L for class OFOxmBsnUdf2MaskedVer13
                   return OFOxmBsnUdf2MaskedVer13.READER.readFrom(bb);
               case 0x31604:
                   // discriminator value 0x31604L=0x31604L for class OFOxmBsnUdf3Ver13
                   return OFOxmBsnUdf3Ver13.READER.readFrom(bb);
               case 0x31708:
                   // discriminator value 0x31708L=0x31708L for class OFOxmBsnUdf3MaskedVer13
                   return OFOxmBsnUdf3MaskedVer13.READER.readFrom(bb);
               case 0x31804:
                   // discriminator value 0x31804L=0x31804L for class OFOxmBsnUdf4Ver13
                   return OFOxmBsnUdf4Ver13.READER.readFrom(bb);
               case 0x31908:
                   // discriminator value 0x31908L=0x31908L for class OFOxmBsnUdf4MaskedVer13
                   return OFOxmBsnUdf4MaskedVer13.READER.readFrom(bb);
               case 0x31a04:
                   // discriminator value 0x31a04L=0x31a04L for class OFOxmBsnUdf5Ver13
                   return OFOxmBsnUdf5Ver13.READER.readFrom(bb);
               case 0x31b08:
                   // discriminator value 0x31b08L=0x31b08L for class OFOxmBsnUdf5MaskedVer13
                   return OFOxmBsnUdf5MaskedVer13.READER.readFrom(bb);
               case 0x31c04:
                   // discriminator value 0x31c04L=0x31c04L for class OFOxmBsnUdf6Ver13
                   return OFOxmBsnUdf6Ver13.READER.readFrom(bb);
               case 0x31d08:
                   // discriminator value 0x31d08L=0x31d08L for class OFOxmBsnUdf6MaskedVer13
                   return OFOxmBsnUdf6MaskedVer13.READER.readFrom(bb);
               case 0x31e04:
                   // discriminator value 0x31e04L=0x31e04L for class OFOxmBsnUdf7Ver13
                   return OFOxmBsnUdf7Ver13.READER.readFrom(bb);
               case 0x31f08:
                   // discriminator value 0x31f08L=0x31f08L for class OFOxmBsnUdf7MaskedVer13
                   return OFOxmBsnUdf7MaskedVer13.READER.readFrom(bb);
               case 0x32204:
                   // discriminator value 0x32204L=0x32204L for class OFOxmBsnVlanXlatePortGroupIdVer13
                   return OFOxmBsnVlanXlatePortGroupIdVer13.READER.readFrom(bb);
               case 0x32308:
                   // discriminator value 0x32308L=0x32308L for class OFOxmBsnVlanXlatePortGroupIdMaskedVer13
                   return OFOxmBsnVlanXlatePortGroupIdMaskedVer13.READER.readFrom(bb);
               case 0x30404:
                   // discriminator value 0x30404L=0x30404L for class OFOxmBsnVrfVer13
                   return OFOxmBsnVrfVer13.READER.readFrom(bb);
               case 0x30508:
                   // discriminator value 0x30508L=0x30508L for class OFOxmBsnVrfMaskedVer13
                   return OFOxmBsnVrfMaskedVer13.READER.readFrom(bb);
               case 0x1d604:
                   // discriminator value 0x1d604L=0x1d604L for class OFOxmConntrackMarkVer13
                   return OFOxmConntrackMarkVer13.READER.readFrom(bb);
               case 0x1d708:
                   // discriminator value 0x1d708L=0x1d708L for class OFOxmConntrackMarkMaskedVer13
                   return OFOxmConntrackMarkMaskedVer13.READER.readFrom(bb);
               case 0x1d204:
                   // discriminator value 0x1d204L=0x1d204L for class OFOxmConntrackStateVer13
                   return OFOxmConntrackStateVer13.READER.readFrom(bb);
               case 0x1d308:
                   // discriminator value 0x1d308L=0x1d308L for class OFOxmConntrackStateMaskedVer13
                   return OFOxmConntrackStateMaskedVer13.READER.readFrom(bb);
               case 0x1d402:
                   // discriminator value 0x1d402L=0x1d402L for class OFOxmConntrackZoneVer13
                   return OFOxmConntrackZoneVer13.READER.readFrom(bb);
               case 0x1f406:
                   // discriminator value 0x1f406L=0x1f406L for class OFOxmEncapEthDstVer13
                   return OFOxmEncapEthDstVer13.READER.readFrom(bb);
               case 0x1f50c:
                   // discriminator value 0x1f50cL=0x1f50cL for class OFOxmEncapEthDstMaskedVer13
                   return OFOxmEncapEthDstMaskedVer13.READER.readFrom(bb);
               case 0x1f206:
                   // discriminator value 0x1f206L=0x1f206L for class OFOxmEncapEthSrcVer13
                   return OFOxmEncapEthSrcVer13.READER.readFrom(bb);
               case 0x1f30c:
                   // discriminator value 0x1f30cL=0x1f30cL for class OFOxmEncapEthSrcMaskedVer13
                   return OFOxmEncapEthSrcMaskedVer13.READER.readFrom(bb);
               case 0x1f602:
                   // discriminator value 0x1f602L=0x1f602L for class OFOxmEncapEthTypeVer13
                   return OFOxmEncapEthTypeVer13.READER.readFrom(bb);
               case 0x1f704:
                   // discriminator value 0x1f704L=0x1f704L for class OFOxmEncapEthTypeMaskedVer13
                   return OFOxmEncapEthTypeMaskedVer13.READER.readFrom(bb);
               case (int) 0x80000606:
                   // discriminator value 0x80000606L=0x80000606L for class OFOxmEthDstVer13
                   return OFOxmEthDstVer13.READER.readFrom(bb);
               case (int) 0x8000070c:
                   // discriminator value 0x8000070cL=0x8000070cL for class OFOxmEthDstMaskedVer13
                   return OFOxmEthDstMaskedVer13.READER.readFrom(bb);
               case (int) 0x80000806:
                   // discriminator value 0x80000806L=0x80000806L for class OFOxmEthSrcVer13
                   return OFOxmEthSrcVer13.READER.readFrom(bb);
               case (int) 0x8000090c:
                   // discriminator value 0x8000090cL=0x8000090cL for class OFOxmEthSrcMaskedVer13
                   return OFOxmEthSrcMaskedVer13.READER.readFrom(bb);
               case (int) 0x80000a02:
                   // discriminator value 0x80000a02L=0x80000a02L for class OFOxmEthTypeVer13
                   return OFOxmEthTypeVer13.READER.readFrom(bb);
               case (int) 0x80000b04:
                   // discriminator value 0x80000b04L=0x80000b04L for class OFOxmEthTypeMaskedVer13
                   return OFOxmEthTypeMaskedVer13.READER.readFrom(bb);
               case (int) 0x80002801:
                   // discriminator value 0x80002801L=0x80002801L for class OFOxmIcmpv4CodeVer13
                   return OFOxmIcmpv4CodeVer13.READER.readFrom(bb);
               case (int) 0x80002902:
                   // discriminator value 0x80002902L=0x80002902L for class OFOxmIcmpv4CodeMaskedVer13
                   return OFOxmIcmpv4CodeMaskedVer13.READER.readFrom(bb);
               case (int) 0x80002601:
                   // discriminator value 0x80002601L=0x80002601L for class OFOxmIcmpv4TypeVer13
                   return OFOxmIcmpv4TypeVer13.READER.readFrom(bb);
               case (int) 0x80002702:
                   // discriminator value 0x80002702L=0x80002702L for class OFOxmIcmpv4TypeMaskedVer13
                   return OFOxmIcmpv4TypeMaskedVer13.READER.readFrom(bb);
               case (int) 0x80003c01:
                   // discriminator value 0x80003c01L=0x80003c01L for class OFOxmIcmpv6CodeVer13
                   return OFOxmIcmpv6CodeVer13.READER.readFrom(bb);
               case (int) 0x80003d02:
                   // discriminator value 0x80003d02L=0x80003d02L for class OFOxmIcmpv6CodeMaskedVer13
                   return OFOxmIcmpv6CodeMaskedVer13.READER.readFrom(bb);
               case (int) 0x80003a01:
                   // discriminator value 0x80003a01L=0x80003a01L for class OFOxmIcmpv6TypeVer13
                   return OFOxmIcmpv6TypeVer13.READER.readFrom(bb);
               case (int) 0x80003b02:
                   // discriminator value 0x80003b02L=0x80003b02L for class OFOxmIcmpv6TypeMaskedVer13
                   return OFOxmIcmpv6TypeMaskedVer13.READER.readFrom(bb);
               case (int) 0x80000204:
                   // discriminator value 0x80000204L=0x80000204L for class OFOxmInPhyPortVer13
                   return OFOxmInPhyPortVer13.READER.readFrom(bb);
               case (int) 0x80000308:
                   // discriminator value 0x80000308L=0x80000308L for class OFOxmInPhyPortMaskedVer13
                   return OFOxmInPhyPortMaskedVer13.READER.readFrom(bb);
               case (int) 0x80000004:
                   // discriminator value 0x80000004L=0x80000004L for class OFOxmInPortVer13
                   return OFOxmInPortVer13.READER.readFrom(bb);
               case (int) 0x80000108:
                   // discriminator value 0x80000108L=0x80000108L for class OFOxmInPortMaskedVer13
                   return OFOxmInPortMaskedVer13.READER.readFrom(bb);
               case (int) 0x80001001:
                   // discriminator value 0x80001001L=0x80001001L for class OFOxmIpDscpVer13
                   return OFOxmIpDscpVer13.READER.readFrom(bb);
               case (int) 0x80001102:
                   // discriminator value 0x80001102L=0x80001102L for class OFOxmIpDscpMaskedVer13
                   return OFOxmIpDscpMaskedVer13.READER.readFrom(bb);
               case (int) 0x80001201:
                   // discriminator value 0x80001201L=0x80001201L for class OFOxmIpEcnVer13
                   return OFOxmIpEcnVer13.READER.readFrom(bb);
               case (int) 0x80001302:
                   // discriminator value 0x80001302L=0x80001302L for class OFOxmIpEcnMaskedVer13
                   return OFOxmIpEcnMaskedVer13.READER.readFrom(bb);
               case (int) 0x80001401:
                   // discriminator value 0x80001401L=0x80001401L for class OFOxmIpProtoVer13
                   return OFOxmIpProtoVer13.READER.readFrom(bb);
               case (int) 0x80001502:
                   // discriminator value 0x80001502L=0x80001502L for class OFOxmIpProtoMaskedVer13
                   return OFOxmIpProtoMaskedVer13.READER.readFrom(bb);
               case (int) 0x80001804:
                   // discriminator value 0x80001804L=0x80001804L for class OFOxmIpv4DstVer13
                   return OFOxmIpv4DstVer13.READER.readFrom(bb);
               case (int) 0x80001908:
                   // discriminator value 0x80001908L=0x80001908L for class OFOxmIpv4DstMaskedVer13
                   return OFOxmIpv4DstMaskedVer13.READER.readFrom(bb);
               case (int) 0x80001604:
                   // discriminator value 0x80001604L=0x80001604L for class OFOxmIpv4SrcVer13
                   return OFOxmIpv4SrcVer13.READER.readFrom(bb);
               case (int) 0x80001708:
                   // discriminator value 0x80001708L=0x80001708L for class OFOxmIpv4SrcMaskedVer13
                   return OFOxmIpv4SrcMaskedVer13.READER.readFrom(bb);
               case (int) 0x80003610:
                   // discriminator value 0x80003610L=0x80003610L for class OFOxmIpv6DstVer13
                   return OFOxmIpv6DstVer13.READER.readFrom(bb);
               case (int) 0x80003720:
                   // discriminator value 0x80003720L=0x80003720L for class OFOxmIpv6DstMaskedVer13
                   return OFOxmIpv6DstMaskedVer13.READER.readFrom(bb);
               case (int) 0x80003804:
                   // discriminator value 0x80003804L=0x80003804L for class OFOxmIpv6FlabelVer13
                   return OFOxmIpv6FlabelVer13.READER.readFrom(bb);
               case (int) 0x80003908:
                   // discriminator value 0x80003908L=0x80003908L for class OFOxmIpv6FlabelMaskedVer13
                   return OFOxmIpv6FlabelMaskedVer13.READER.readFrom(bb);
               case (int) 0x80004006:
                   // discriminator value 0x80004006L=0x80004006L for class OFOxmIpv6NdSllVer13
                   return OFOxmIpv6NdSllVer13.READER.readFrom(bb);
               case (int) 0x8000410c:
                   // discriminator value 0x8000410cL=0x8000410cL for class OFOxmIpv6NdSllMaskedVer13
                   return OFOxmIpv6NdSllMaskedVer13.READER.readFrom(bb);
               case (int) 0x80003e10:
                   // discriminator value 0x80003e10L=0x80003e10L for class OFOxmIpv6NdTargetVer13
                   return OFOxmIpv6NdTargetVer13.READER.readFrom(bb);
               case (int) 0x80003f20:
                   // discriminator value 0x80003f20L=0x80003f20L for class OFOxmIpv6NdTargetMaskedVer13
                   return OFOxmIpv6NdTargetMaskedVer13.READER.readFrom(bb);
               case (int) 0x80004206:
                   // discriminator value 0x80004206L=0x80004206L for class OFOxmIpv6NdTllVer13
                   return OFOxmIpv6NdTllVer13.READER.readFrom(bb);
               case (int) 0x8000430c:
                   // discriminator value 0x8000430cL=0x8000430cL for class OFOxmIpv6NdTllMaskedVer13
                   return OFOxmIpv6NdTllMaskedVer13.READER.readFrom(bb);
               case (int) 0x80003410:
                   // discriminator value 0x80003410L=0x80003410L for class OFOxmIpv6SrcVer13
                   return OFOxmIpv6SrcVer13.READER.readFrom(bb);
               case (int) 0x80003520:
                   // discriminator value 0x80003520L=0x80003520L for class OFOxmIpv6SrcMaskedVer13
                   return OFOxmIpv6SrcMaskedVer13.READER.readFrom(bb);
               case (int) 0x80000408:
                   // discriminator value 0x80000408L=0x80000408L for class OFOxmMetadataVer13
                   return OFOxmMetadataVer13.READER.readFrom(bb);
               case (int) 0x80000510:
                   // discriminator value 0x80000510L=0x80000510L for class OFOxmMetadataMaskedVer13
                   return OFOxmMetadataMaskedVer13.READER.readFrom(bb);
               case (int) 0x80004404:
                   // discriminator value 0x80004404L=0x80004404L for class OFOxmMplsLabelVer13
                   return OFOxmMplsLabelVer13.READER.readFrom(bb);
               case (int) 0x80004508:
                   // discriminator value 0x80004508L=0x80004508L for class OFOxmMplsLabelMaskedVer13
                   return OFOxmMplsLabelMaskedVer13.READER.readFrom(bb);
               case (int) 0x80004601:
                   // discriminator value 0x80004601L=0x80004601L for class OFOxmMplsTcVer13
                   return OFOxmMplsTcVer13.READER.readFrom(bb);
               case (int) 0x80004702:
                   // discriminator value 0x80004702L=0x80004702L for class OFOxmMplsTcMaskedVer13
                   return OFOxmMplsTcMaskedVer13.READER.readFrom(bb);
               case 0x1e604:
                   // discriminator value 0x1e604L=0x1e604L for class OFOxmNshC1Ver13
                   return OFOxmNshC1Ver13.READER.readFrom(bb);
               case 0x1e708:
                   // discriminator value 0x1e708L=0x1e708L for class OFOxmNshC1MaskedVer13
                   return OFOxmNshC1MaskedVer13.READER.readFrom(bb);
               case 0x1e804:
                   // discriminator value 0x1e804L=0x1e804L for class OFOxmNshC2Ver13
                   return OFOxmNshC2Ver13.READER.readFrom(bb);
               case 0x1e908:
                   // discriminator value 0x1e908L=0x1e908L for class OFOxmNshC2MaskedVer13
                   return OFOxmNshC2MaskedVer13.READER.readFrom(bb);
               case 0x1ea04:
                   // discriminator value 0x1ea04L=0x1ea04L for class OFOxmNshC3Ver13
                   return OFOxmNshC3Ver13.READER.readFrom(bb);
               case 0x1eb08:
                   // discriminator value 0x1eb08L=0x1eb08L for class OFOxmNshC3MaskedVer13
                   return OFOxmNshC3MaskedVer13.READER.readFrom(bb);
               case 0x1ec04:
                   // discriminator value 0x1ec04L=0x1ec04L for class OFOxmNshC4Ver13
                   return OFOxmNshC4Ver13.READER.readFrom(bb);
               case 0x1ed08:
                   // discriminator value 0x1ed08L=0x1ed08L for class OFOxmNshC4MaskedVer13
                   return OFOxmNshC4MaskedVer13.READER.readFrom(bb);
               case 0x1ee01:
                   // discriminator value 0x1ee01L=0x1ee01L for class OFOxmNshMdtypeVer13
                   return OFOxmNshMdtypeVer13.READER.readFrom(bb);
               case 0x1ef02:
                   // discriminator value 0x1ef02L=0x1ef02L for class OFOxmNshMdtypeMaskedVer13
                   return OFOxmNshMdtypeMaskedVer13.READER.readFrom(bb);
               case 0x1f001:
                   // discriminator value 0x1f001L=0x1f001L for class OFOxmNshNpVer13
                   return OFOxmNshNpVer13.READER.readFrom(bb);
               case 0x1f102:
                   // discriminator value 0x1f102L=0x1f102L for class OFOxmNshNpMaskedVer13
                   return OFOxmNshNpMaskedVer13.READER.readFrom(bb);
               case 0x1e401:
                   // discriminator value 0x1e401L=0x1e401L for class OFOxmNsiVer13
                   return OFOxmNsiVer13.READER.readFrom(bb);
               case 0x1e502:
                   // discriminator value 0x1e502L=0x1e502L for class OFOxmNsiMaskedVer13
                   return OFOxmNsiMaskedVer13.READER.readFrom(bb);
               case 0x1e204:
                   // discriminator value 0x1e204L=0x1e204L for class OFOxmNspVer13
                   return OFOxmNspVer13.READER.readFrom(bb);
               case 0x1e308:
                   // discriminator value 0x1e308L=0x1e308L for class OFOxmNspMaskedVer13
                   return OFOxmNspMaskedVer13.READER.readFrom(bb);
               case (int) 0xffff5406:
                   // discriminator value 0xffff5406L=0xffff5406L for class OFOxmOvsTcpFlagsVer13
                   return OFOxmOvsTcpFlagsVer13.READER.readFrom(bb);
               case (int) 0xffff5508:
                   // discriminator value 0xffff5508L=0xffff5508L for class OFOxmOvsTcpFlagsMaskedVer13
                   return OFOxmOvsTcpFlagsMaskedVer13.READER.readFrom(bb);
               case 0x10004:
                   // discriminator value 0x10004L=0x10004L for class OFOxmReg0Ver13
                   return OFOxmReg0Ver13.READER.readFrom(bb);
               case 0x10108:
                   // discriminator value 0x10108L=0x10108L for class OFOxmReg0MaskedVer13
                   return OFOxmReg0MaskedVer13.READER.readFrom(bb);
               case 0x10204:
                   // discriminator value 0x10204L=0x10204L for class OFOxmReg1Ver13
                   return OFOxmReg1Ver13.READER.readFrom(bb);
               case 0x10308:
                   // discriminator value 0x10308L=0x10308L for class OFOxmReg1MaskedVer13
                   return OFOxmReg1MaskedVer13.READER.readFrom(bb);
               case 0x10404:
                   // discriminator value 0x10404L=0x10404L for class OFOxmReg2Ver13
                   return OFOxmReg2Ver13.READER.readFrom(bb);
               case 0x10508:
                   // discriminator value 0x10508L=0x10508L for class OFOxmReg2MaskedVer13
                   return OFOxmReg2MaskedVer13.READER.readFrom(bb);
               case 0x10604:
                   // discriminator value 0x10604L=0x10604L for class OFOxmReg3Ver13
                   return OFOxmReg3Ver13.READER.readFrom(bb);
               case 0x10708:
                   // discriminator value 0x10708L=0x10708L for class OFOxmReg3MaskedVer13
                   return OFOxmReg3MaskedVer13.READER.readFrom(bb);
               case 0x10804:
                   // discriminator value 0x10804L=0x10804L for class OFOxmReg4Ver13
                   return OFOxmReg4Ver13.READER.readFrom(bb);
               case 0x10908:
                   // discriminator value 0x10908L=0x10908L for class OFOxmReg4MaskedVer13
                   return OFOxmReg4MaskedVer13.READER.readFrom(bb);
               case 0x10a04:
                   // discriminator value 0x10a04L=0x10a04L for class OFOxmReg5Ver13
                   return OFOxmReg5Ver13.READER.readFrom(bb);
               case 0x10b08:
                   // discriminator value 0x10b08L=0x10b08L for class OFOxmReg5MaskedVer13
                   return OFOxmReg5MaskedVer13.READER.readFrom(bb);
               case 0x10c04:
                   // discriminator value 0x10c04L=0x10c04L for class OFOxmReg6Ver13
                   return OFOxmReg6Ver13.READER.readFrom(bb);
               case 0x10d08:
                   // discriminator value 0x10d08L=0x10d08L for class OFOxmReg6MaskedVer13
                   return OFOxmReg6MaskedVer13.READER.readFrom(bb);
               case 0x10e04:
                   // discriminator value 0x10e04L=0x10e04L for class OFOxmReg7Ver13
                   return OFOxmReg7Ver13.READER.readFrom(bb);
               case 0x11008:
                   // discriminator value 0x11008L=0x11008L for class OFOxmReg7MaskedVer13
                   return OFOxmReg7MaskedVer13.READER.readFrom(bb);
               case (int) 0x80002402:
                   // discriminator value 0x80002402L=0x80002402L for class OFOxmSctpDstVer13
                   return OFOxmSctpDstVer13.READER.readFrom(bb);
               case (int) 0x80002504:
                   // discriminator value 0x80002504L=0x80002504L for class OFOxmSctpDstMaskedVer13
                   return OFOxmSctpDstMaskedVer13.READER.readFrom(bb);
               case (int) 0x80002202:
                   // discriminator value 0x80002202L=0x80002202L for class OFOxmSctpSrcVer13
                   return OFOxmSctpSrcVer13.READER.readFrom(bb);
               case (int) 0x80002304:
                   // discriminator value 0x80002304L=0x80002304L for class OFOxmSctpSrcMaskedVer13
                   return OFOxmSctpSrcMaskedVer13.READER.readFrom(bb);
               case (int) 0x80001c02:
                   // discriminator value 0x80001c02L=0x80001c02L for class OFOxmTcpDstVer13
                   return OFOxmTcpDstVer13.READER.readFrom(bb);
               case (int) 0x80001d04:
                   // discriminator value 0x80001d04L=0x80001d04L for class OFOxmTcpDstMaskedVer13
                   return OFOxmTcpDstMaskedVer13.READER.readFrom(bb);
               case (int) 0x80001a02:
                   // discriminator value 0x80001a02L=0x80001a02L for class OFOxmTcpSrcVer13
                   return OFOxmTcpSrcVer13.READER.readFrom(bb);
               case (int) 0x80001b04:
                   // discriminator value 0x80001b04L=0x80001b04L for class OFOxmTcpSrcMaskedVer13
                   return OFOxmTcpSrcMaskedVer13.READER.readFrom(bb);
               case 0x1d002:
                   // discriminator value 0x1d002L=0x1d002L for class OFOxmTunFlagsVer13
                   return OFOxmTunFlagsVer13.READER.readFrom(bb);
               case 0x1d104:
                   // discriminator value 0x1d104L=0x1d104L for class OFOxmTunFlagsMaskedVer13
                   return OFOxmTunFlagsMaskedVer13.READER.readFrom(bb);
               case 0x14e01:
                   // discriminator value 0x14e01L=0x14e01L for class OFOxmTunGbpFlagsVer13
                   return OFOxmTunGbpFlagsVer13.READER.readFrom(bb);
               case 0x14f02:
                   // discriminator value 0x14f02L=0x14f02L for class OFOxmTunGbpFlagsMaskedVer13
                   return OFOxmTunGbpFlagsMaskedVer13.READER.readFrom(bb);
               case 0x14c02:
                   // discriminator value 0x14c02L=0x14c02L for class OFOxmTunGbpIdVer13
                   return OFOxmTunGbpIdVer13.READER.readFrom(bb);
               case 0x14d04:
                   // discriminator value 0x14d04L=0x14d04L for class OFOxmTunGbpIdMaskedVer13
                   return OFOxmTunGbpIdMaskedVer13.READER.readFrom(bb);
               case 0x1e001:
                   // discriminator value 0x1e001L=0x1e001L for class OFOxmTunGpeFlagsVer13
                   return OFOxmTunGpeFlagsVer13.READER.readFrom(bb);
               case 0x1e102:
                   // discriminator value 0x1e102L=0x1e102L for class OFOxmTunGpeFlagsMaskedVer13
                   return OFOxmTunGpeFlagsMaskedVer13.READER.readFrom(bb);
               case 0x1de01:
                   // discriminator value 0x1de01L=0x1de01L for class OFOxmTunGpeNpVer13
                   return OFOxmTunGpeNpVer13.READER.readFrom(bb);
               case 0x1df02:
                   // discriminator value 0x1df02L=0x1df02L for class OFOxmTunGpeNpMaskedVer13
                   return OFOxmTunGpeNpMaskedVer13.READER.readFrom(bb);
               case 0x14004:
                   // discriminator value 0x14004L=0x14004L for class OFOxmTunnelIpv4DstVer13
                   return OFOxmTunnelIpv4DstVer13.READER.readFrom(bb);
               case 0x14108:
                   // discriminator value 0x14108L=0x14108L for class OFOxmTunnelIpv4DstMaskedVer13
                   return OFOxmTunnelIpv4DstMaskedVer13.READER.readFrom(bb);
               case 0x13e04:
                   // discriminator value 0x13e04L=0x13e04L for class OFOxmTunnelIpv4SrcVer13
                   return OFOxmTunnelIpv4SrcVer13.READER.readFrom(bb);
               case 0x13f08:
                   // discriminator value 0x13f08L=0x13f08L for class OFOxmTunnelIpv4SrcMaskedVer13
                   return OFOxmTunnelIpv4SrcMaskedVer13.READER.readFrom(bb);
               case 0x1dc10:
                   // discriminator value 0x1dc10L=0x1dc10L for class OFOxmTunnelIpv6DstVer13
                   return OFOxmTunnelIpv6DstVer13.READER.readFrom(bb);
               case (int) 0x80002002:
                   // discriminator value 0x80002002L=0x80002002L for class OFOxmUdpDstVer13
                   return OFOxmUdpDstVer13.READER.readFrom(bb);
               case (int) 0x80002104:
                   // discriminator value 0x80002104L=0x80002104L for class OFOxmUdpDstMaskedVer13
                   return OFOxmUdpDstMaskedVer13.READER.readFrom(bb);
               case (int) 0x80001e02:
                   // discriminator value 0x80001e02L=0x80001e02L for class OFOxmUdpSrcVer13
                   return OFOxmUdpSrcVer13.READER.readFrom(bb);
               case (int) 0x80001f04:
                   // discriminator value 0x80001f04L=0x80001f04L for class OFOxmUdpSrcMaskedVer13
                   return OFOxmUdpSrcMaskedVer13.READER.readFrom(bb);
               case (int) 0x80000e01:
                   // discriminator value 0x80000e01L=0x80000e01L for class OFOxmVlanPcpVer13
                   return OFOxmVlanPcpVer13.READER.readFrom(bb);
               case (int) 0x80000f02:
                   // discriminator value 0x80000f02L=0x80000f02L for class OFOxmVlanPcpMaskedVer13
                   return OFOxmVlanPcpMaskedVer13.READER.readFrom(bb);
               case (int) 0x80000c02:
                   // discriminator value 0x80000c02L=0x80000c02L for class OFOxmVlanVidVer13
                   return OFOxmVlanVidVer13.READER.readFrom(bb);
               case (int) 0x80000d04:
                   // discriminator value 0x80000d04L=0x80000d04L for class OFOxmVlanVidMaskedVer13
                   return OFOxmVlanVidMaskedVer13.READER.readFrom(bb);
               case 0x32c06:
                   // discriminator value 0x32c06L=0x32c06L for class OFOxmBsnInnerEthDstVer13
                   return OFOxmBsnInnerEthDstVer13.READER.readFrom(bb);
               case 0x32d0c:
                   // discriminator value 0x32d0cL=0x32d0cL for class OFOxmBsnInnerEthDstMaskedVer13
                   return OFOxmBsnInnerEthDstMaskedVer13.READER.readFrom(bb);
               case 0x32e06:
                   // discriminator value 0x32e06L=0x32e06L for class OFOxmBsnInnerEthSrcVer13
                   return OFOxmBsnInnerEthSrcVer13.READER.readFrom(bb);
               case 0x32f0c:
                   // discriminator value 0x32f0cL=0x32f0cL for class OFOxmBsnInnerEthSrcMaskedVer13
                   return OFOxmBsnInnerEthSrcMaskedVer13.READER.readFrom(bb);
               case 0x33002:
                   // discriminator value 0x33002L=0x33002L for class OFOxmBsnInnerVlanVidVer13
                   return OFOxmBsnInnerVlanVidVer13.READER.readFrom(bb);
               case 0x33104:
                   // discriminator value 0x33104L=0x33104L for class OFOxmBsnInnerVlanVidMaskedVer13
                   return OFOxmBsnInnerVlanVidMaskedVer13.READER.readFrom(bb);
               case 0x33202:
                   // discriminator value 0x33202L=0x33202L for class OFOxmBsnVfiVer13
                   return OFOxmBsnVfiVer13.READER.readFrom(bb);
               case 0x33304:
                   // discriminator value 0x33304L=0x33304L for class OFOxmBsnVfiMaskedVer13
                   return OFOxmBsnVfiMaskedVer13.READER.readFrom(bb);
               case 0x32a04:
                   // discriminator value 0x32a04L=0x32a04L for class OFOxmBsnVxlanNetworkIdVer13
                   return OFOxmBsnVxlanNetworkIdVer13.READER.readFrom(bb);
               case 0x32b08:
                   // discriminator value 0x32b08L=0x32b08L for class OFOxmBsnVxlanNetworkIdMaskedVer13
                   return OFOxmBsnVxlanNetworkIdMaskedVer13.READER.readFrom(bb);
               case (int) 0xffff0a06:
                   // discriminator value 0xffff0a06L=0xffff0a06L for class OFOxmExpOchSigIdVer13
                   return OFOxmExpOchSigIdVer13.READER.readFrom(bb);
               case (int) 0xffff0801:
                   // discriminator value 0xffff0801L=0xffff0801L for class OFOxmExpOchSigtypeVer13
                   return OFOxmExpOchSigtypeVer13.READER.readFrom(bb);
               case (int) 0xffff0610:
                   // discriminator value 0xffff0610L=0xffff0610L for class OFOxmExpOduSigIdVer13
                   return OFOxmExpOduSigIdVer13.READER.readFrom(bb);
               case (int) 0xffff0401:
                   // discriminator value 0xffff0401L=0xffff0401L for class OFOxmExpOduSigtypeVer13
                   return OFOxmExpOduSigtypeVer13.READER.readFrom(bb);
               case (int) 0x80004e02:
                   // discriminator value 0x80004e02L=0x80004e02L for class OFOxmIpv6ExthdrVer13
                   return OFOxmIpv6ExthdrVer13.READER.readFrom(bb);
               case (int) 0x80004f04:
                   // discriminator value 0x80004f04L=0x80004f04L for class OFOxmIpv6ExthdrMaskedVer13
                   return OFOxmIpv6ExthdrMaskedVer13.READER.readFrom(bb);
               case (int) 0x80004801:
                   // discriminator value 0x80004801L=0x80004801L for class OFOxmMplsBosVer13
                   return OFOxmMplsBosVer13.READER.readFrom(bb);
               case (int) 0x80004902:
                   // discriminator value 0x80004902L=0x80004902L for class OFOxmMplsBosMaskedVer13
                   return OFOxmMplsBosMaskedVer13.READER.readFrom(bb);
               case 0x85c04:
                   // discriminator value 0x85c04L=0x85c04L for class OFOxmOchSigattVer13
                   return OFOxmOchSigattVer13.READER.readFrom(bb);
               case (int) 0x80005c04:
                   // discriminator value 0x80005c04L=0x80005c04L for class OFOxmOchSigattBasicVer13
                   return OFOxmOchSigattBasicVer13.READER.readFrom(bb);
               case (int) 0x80005a06:
                   // discriminator value 0x80005a06L=0x80005a06L for class OFOxmOchSigidVer13
                   return OFOxmOchSigidVer13.READER.readFrom(bb);
               case (int) 0x80005801:
                   // discriminator value 0x80005801L=0x80005801L for class OFOxmOchSigtypeVer13
                   return OFOxmOchSigtypeVer13.READER.readFrom(bb);
               case (int) 0xffff5608:
                   // discriminator value 0xffff5608L=0xffff5608L for class OFOxmOfdpaActsetOutputVer13
                   return OFOxmOfdpaActsetOutputVer13.READER.readFrom(bb);
               case (int) 0xffff3005:
                   // discriminator value 0xffff3005L=0xffff3005L for class OFOxmOfdpaAllowVlanTranslationVer13
                   return OFOxmOfdpaAllowVlanTranslationVer13.READER.readFrom(bb);
               case (int) 0xffff1008:
                   // discriminator value 0xffff1008L=0xffff1008L for class OFOxmOfdpaMplsL2PortVer13
                   return OFOxmOfdpaMplsL2PortVer13.READER.readFrom(bb);
               case (int) 0xffff110c:
                   // discriminator value 0xffff110cL=0xffff110cL for class OFOxmOfdpaMplsL2PortMaskedVer13
                   return OFOxmOfdpaMplsL2PortMaskedVer13.READER.readFrom(bb);
               case (int) 0xffff2e06:
                   // discriminator value 0xffff2e06L=0xffff2e06L for class OFOxmOfdpaMplsTypeVer13
                   return OFOxmOfdpaMplsTypeVer13.READER.readFrom(bb);
               case (int) 0xffff1406:
                   // discriminator value 0xffff1406L=0xffff1406L for class OFOxmOfdpaOvidVer13
                   return OFOxmOfdpaOvidVer13.READER.readFrom(bb);
               case (int) 0xffff0a05:
                   // discriminator value 0xffff0a05L=0xffff0a05L for class OFOxmOfdpaQosIndexVer13
                   return OFOxmOfdpaQosIndexVer13.READER.readFrom(bb);
               case (int) 0x80004c08:
                   // discriminator value 0x80004c08L=0x80004c08L for class OFOxmTunnelIdVer13
                   return OFOxmTunnelIdVer13.READER.readFrom(bb);
               case (int) 0x80004d10:
                   // discriminator value 0x80004d10L=0x80004d10L for class OFOxmTunnelIdMaskedVer13
                   return OFOxmTunnelIdMaskedVer13.READER.readFrom(bb);
               default:
                   throw new OFParseError("Unknown value for discriminator typeLen of class OFOxmVer13: " + typeLen);
            }
        }
    }
}
